{"ast":null,"code":"import _classCallCheck from\"/Users/alexnedelcu/Desktop/Web Development/JS/robofriendsapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alexnedelcu/Desktop/Web Development/JS/robofriendsapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/alexnedelcu/Desktop/Web Development/JS/robofriendsapp/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/alexnedelcu/Desktop/Web Development/JS/robofriendsapp/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import CardList from\"../components/CardList.js\";import SearchBox from\"../components/SearchBox.js\";import Scroll from\"../components/Scroll.js\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.onSearchChange=function(event){_this.setState({searchField:event.target.value});};_this.state={robots:[],searchField:\"\"};return _this;}// in methods not defined by react always use the arrow function structure\n_createClass(App,[{key:\"render\",value:function render(){var _this2=this;var filteredRobots=this.state.robots.filter(function(robot){return robot.name.toLowerCase().includes(_this2.state.searchField.toLowerCase())||robot.username.toLowerCase().includes(_this2.state.searchField.toLowerCase())||robot.email.toLowerCase().includes(_this2.state.searchField.toLowerCase());});return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchChange}),/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})]})});}// this is the function used to make requests\n},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(response){return response.json();}).then(function(fetchedRobots){_this3.setState({robots:fetchedRobots});});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/alexnedelcu/Desktop/Web Development/JS/robofriendsapp/src/containers/App.js"],"names":["React","CardList","SearchBox","Scroll","App","props","onSearchChange","event","setState","searchField","target","value","state","robots","filteredRobots","filter","robot","name","toLowerCase","includes","username","email","fetch","then","response","json","fetchedRobots","Component"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAO,WAAP,C,2FAEMC,CAAAA,G,sGACF,aAAYC,KAAZ,CAAmB,qCACf,uBAAMA,KAAN,EADe,MASnBC,cATmB,CASF,SAACC,KAAD,CAAW,CACxB,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAA3B,CAAd,EACH,CAXkB,CAEf,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAE,EADC,CAETJ,WAAW,CAAE,EAFJ,CAAb,CAFe,aAMlB,CAED;sCAKA,iBAAS,iBACL,GAAMK,CAAAA,cAAc,CAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,MAAlB,CAAyB,SAAAC,KAAK,CAAI,CACrD,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,MAAI,CAACP,KAAL,CAAWH,WAAX,CAAuBS,WAAvB,EAAlC,GACHF,KAAK,CAACI,QAAN,CAAeF,WAAf,GAA6BC,QAA7B,CAAsC,MAAI,CAACP,KAAL,CAAWH,WAAX,CAAuBS,WAAvB,EAAtC,CADG,EAEHF,KAAK,CAACK,KAAN,CAAYH,WAAZ,GAA0BC,QAA1B,CAAmC,MAAI,CAACP,KAAL,CAAWH,WAAX,CAAuBS,WAAvB,EAAnC,CAFJ,CAGH,CAJsB,CAAvB,CAKA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,aAAK,SAAS,CAAE,IAAhB,wBACI,WAAI,SAAS,CAAE,IAAf,yBADJ,cAEI,KAAC,SAAD,EAAW,YAAY,CAAE,KAAKZ,cAA9B,EAFJ,cAIQ,KAAC,QAAD,EAAU,MAAM,CAAEQ,cAAlB,EAJR,GADJ,EADJ,CAWH,CAED;iCACA,4BAAoB,iBAChBQ,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyD,SAAAC,QAAQ,CAAI,CACjE,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAFD,EAEGF,IAFH,CAEQ,SAAAG,aAAa,CAAI,CACrB,MAAI,CAAClB,QAAL,CAAc,CAACK,MAAM,CAAEa,aAAT,CAAd,EACH,CAJD,EAKH,C,iBAxCa1B,KAAK,CAAC2B,S,EA2CxB,cAAevB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport CardList from \"../components/CardList.js\";\nimport SearchBox from \"../components/SearchBox.js\";\nimport Scroll from \"../components/Scroll.js\"\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            robots: [],\n            searchField: \"\"\n        }\n    }\n\n    // in methods not defined by react always use the arrow function structure\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value});\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase()) ||\n                robot.username.toLowerCase().includes(this.state.searchField.toLowerCase()) ||\n                robot.email.toLowerCase().includes(this.state.searchField.toLowerCase());\n        });\n        return (\n            <React.Fragment>\n                <div className={\"tc\"}>\n                    <h1 className={\"f1\"}>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    {/*<Scroll>*/}\n                        <CardList robots={filteredRobots}/>\n                    {/*</Scroll>*/}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    // this is the function used to make requests\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n            return response.json();\n        }).then(fetchedRobots => {\n            this.setState({robots: fetchedRobots});\n        })\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}